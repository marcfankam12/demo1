---
title: "Etat Recaptulatif de la Collecte de ce jour: `r Sys.Date()`"
author: "Fankam Marc"
format: pdf
---

# INDICATEURS DE SUIVI DE LA COLLECTE

## I. Progression du nombre de questionnaires remplis et du nombre de jours écoulés avant la fin de l'enquête dans toute la région

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

library(labelled)

# Importation des données 
df = readRDS("df.rds")

#df1 = df$main
#df2 = df$childrepeat
df1 = df$def$data[[1]] 
df2 = df$def$data[[2]]

# Agrandissement de la base df2

# Départements
index = df2$`_parent_index`
div = c()
for (i in index) {
  a = val_label(df1$S1Q05, df1$S1Q05[df1$`_index` == i])
  div = append(div, a)
}
df2$departement = div

# Communes
index = df2$`_parent_index`
com = c()
for (i in index) {
  a = val_label(df1$S1Q06, df1$S1Q06[df1$`_index` == i])
  com = append(com, a)
}
df2$commune = com

# Enquêteurs

index = df2$`_parent_index`
enq = c()
for (i in index) {
  a = val_label(df1$S1Q03, df1$S1Q03[df1$`_index` == i])
  enq = append(enq, a)
}

df2$enqueteur = enq

# Remplacement des valeurs par les etiquettes de certaines variables


#df2$departement = to_factor(df2$departement)
#df2$commune = to_factor(df2$commune)
#df2$enqueteur = to_factor(df2$enqueteur)
#df2$S2Q04 = to_factor(df2$S2Q04)

# Ajustement du nom d'un enqueteur
df2$S2Q04[df2$S2Q04 == "m"] = "Masculin"
df2$S2Q04[df2$S2Q04 == "f"] = "Feminin"

# Confection d'une base simplifiée en prenant les variables necéssaires
my_data = df2[, c("_index", "departement",  "commune", "enqueteur", "S2Q03", "S2Q04", "S2Q07C", "S2Q08", "S2Q09")]

# Changement de noms de certaines variables
names(my_data)[names(my_data) == "_index"] = "numero"
names(my_data)[names(my_data) == "S2Q03"] = "noms"
names(my_data)[names(my_data) == "S2Q04"] = "sexe"
names(my_data)[names(my_data) == "S2Q07C"] = "age_mois"
names(my_data)[names(my_data) == "S2Q08"] = "poids"
names(my_data)[names(my_data) == "S2Q09"] = "taille"

# pourcentage de jours ecoules

#library(scales)
nbre_jours_eq = 45
Dte_Start_Eq = as.Date("01-09-2024", format = "%d-%m-%Y")
nbre_jrs_ecoules <- length(seq(Dte_Start_Eq, Sys.Date(), by = "day")) - 1
fq_jrs_ecoules = round(100*nbre_jrs_ecoules/nbre_jours_eq)

#fq_jrs_ecoules = percent(nbre_jrs_ecoules/nbre_jours_eq)

# Pourcentages des formulaires déjà remplis

nb_forms = 270
nb_forms_done = nrow(df1)
fq_forms_done = round(100*nb_forms_done/nb_forms)

# Charger la librairie ggplot2
library(ggplot2)

# Créer un dataframe avec les données
data <- data.frame(
  Category = c("Barre", "Charge de travail", "Jours écoulés"),
  Percentage = c(100, fq_forms_done, fq_jrs_ecoules)
)
# Créer un graphique à barres horizontales sans l'axe des abscisses et le quadrillage

ggplot(data, aes(x = reorder(Category, Percentage), y = Percentage, fill = Category)) +
  geom_bar(stat = "identity", width = 1) +
  coord_flip() +
  scale_x_discrete(expand = c(0, 1)) +
  scale_y_continuous(limits = c(0, 125), expand = c(0, 0)) +
  geom_text(aes(label = paste0(Percentage, "%")), hjust = -0.1, color = "black") +
  scale_fill_manual(values = c("Barre" = "green", "Charge de travail" = "orange", "Jours écoulés" = "yellow")) +
  theme_minimal() +
  ggtitle("Barre de progression")+
  theme(
    #plot.margin = unit(c(3, 1, 3, 1), "cm"),
    legend.position = "none",
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_text(size = 12),
    axis.text.x = element_blank(),  
    axis.ticks.x = element_blank(),  
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(),   
    plot.background = element_rect(fill = "aliceblue")
  )

```

## II. Progression du nombre de questionnaires remplis de façon détaillée

### II.1. Progression pour chaque département de la région

Le graphique ci dessous présente la progression de la charge de travail dans chaque département

```{r}
#| echo: false
#| warning: false
#| message: false

df1 <- df1 %>%
  to_character() %>%
  as.data.frame()

```


```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)

df_count <- df1 %>%
  group_by(S1Q05) %>%
  summarise(Percentage = 100 * n() / 90)

ggplot(df_count, aes(x = S1Q05, y = Percentage)) +
  geom_bar(stat = "identity", fill = "turquoise1") +
  labs(x = "Départements", y = "Pourcentage", title = "Progression du travail par département") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = paste0(round(Percentage), "%")), vjust = 0, color = "black") +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2"))
```

### II.2. Département de Boyo

#### II.2.1. Progression pour chaque commune du département de Boyo

Le graphique ci dessous présente la progression de la charge de travail dans chaque commune du département de Boyo

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)

temp = df1[df1$S1Q05 == "Boyo", ]
df_count <- temp %>%
  group_by(S1Q06) %>%
  summarise(Percentage = 100 * n() / 30)

ggplot(df_count, aes(x = S1Q06, y = Percentage)) +
  geom_bar(stat = "identity", fill = "thistle") +
  labs(x = "Communes", y = "Pourcentage", title = "Progression du travail par commune dans le département de Boyo") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = paste0(round(Percentage), "%")), vjust = 0, color = "black") +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) +
  theme(plot.title = element_text(size = 10))

cat("*NB* : Si une commune ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué dans celle-ci.")
```

#### II.2.2. Commune de Belo

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Belo", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Belo")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)

if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Belo") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false

if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

#### II.2.3. Commune de Fundong

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Fundong", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Fundong")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)


if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteur", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Fundong") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))

}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false

if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

#### II.2.4. Commune de Njinikom

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Njinikom", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Njinikom")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)


if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Njinikom") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false


if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

### II.3. Département de Donga mantung

#### II.3.1. Progression pour chaque commune du département de Donga mantung

Le graphique ci dessous présente la progression de la charge de travail dans chaque commune du département de Donga mantung

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)

temp = df1[df1$departement == "Donga mantung", ]
df_count <- temp %>%
  group_by(S1Q06) %>%
  summarise(Percentage = 100 * n() / 30)

ggplot(df_count, aes(x = S1Q06, y = Percentage)) +
  geom_bar(stat = "identity", fill = "thistle") +
  labs(x = "Communes", y = "Pourcentage", title = "Progression du travail par commune dans le département de Donga mantung") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = paste0(round(Percentage), "%")), vjust = 0, color = "black") +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) +
  theme(plot.title = element_text(size = 10))

cat("*NB* : Si une commune ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué dans celle-ci.")
```

#### II.3.2. Commune d'Ako

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Ako", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune d'Ako")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)


if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune d'Ako") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false

if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

#### II.3.3. Commune de Ndu

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Ndu", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Ndu")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)


if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Eqnuêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Ndu") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))

}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false

if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

#### II.3.4. Commune de Misaje

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Misaje", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Misaje")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)

if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Misaje") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false


if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

### II.4. Département de Momo

#### II.4.1. Progression pour chaque commune du département de Momo

Le graphique ci dessous présente la progression de la charge de travail dans chaque commune du département de Momo

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)

temp = df1[df1$departement == "Momo", ]
df_count <- temp %>%
  group_by(S1Q06) %>%
  summarise(Percentage = 100 * n() / 30)

ggplot(df_count, aes(x = S1Q06, y = Percentage)) +
  geom_bar(stat = "identity", fill = "thistle") +
  labs(x = "Communes", y = "Pourcentage", title = "Progression du travail par commune dans le département de Momo") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = paste0(round(Percentage), "%")), vjust = 0, color = "black") +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) +
  theme(plot.title = element_text(size = 10))

cat("*NB* : Si une commune ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué dans celle-ci.")
```

#### II.4.2. Commune de Babessi

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Babessi", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Babessi")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)


if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Babessi") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false

if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

#### II.4.3. Commune de Balikumbat

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Balikumbat", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Balikumbat")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)


if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enquêteurs", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Balikumbat") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))

}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false

if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

#### II.4.4. Commune de Ndop

```{r}
#| echo: false
#| warning: false
#| message: false


temp = df1[df1$S1Q06 == "Ndop", ]
if(nrow(temp) != 0){
cat("Le graphique ci dessous présente la progression de la charge de travail de chaque", "\n", "enquêteur de la commune de Ndop")
}
```

```{r}
#| echo: false
#| warning: false
#| message: false


library(ggplot2)
library(dplyr)

if(nrow(temp) != 0){
df_count <- temp %>%
  group_by(S1Q03) %>%
  summarise(Percentage = 100 * n() / 10)

ggplot(df_count, aes(x = S1Q03, y = Percentage)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(x = "Enqueteur", y = "Pourcentage", title = "Progression du travail par enquêteur dans la commune de Ndop") +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
 geom_text(aes(label = sprintf("%.1f%%", Percentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  theme(axis.text.x = element_text(angle = 0, vjust = 0.7),
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "antiquewhite2")) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

```{r}
#| echo: false
#| warning: false
#| message: false


if(nrow(temp) != 0){
cat("*NB* : Si un enquêteur ne s'affiche pas alors cela voudrait dire qu'aucun travail n'a été", "\n", "effectué par ce dernier.")
}
```

## III. Repartition des enfants enquêtés par sexe

### III.1. De façon générale

Le graphique ci-après présente la répartion des enfants par sexe dans toute la région.

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

a = as.data.frame(my_data$sexe)
colnames(a) = c("sexe")
freq <- a %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  count(sexe) %>%
  mutate(pourcentage = round (n / sum(n) * 100))

ggplot(data = freq, aes(x = sexe, y = pourcentage)) +
  geom_bar(stat = "identity", width = 0.3, fill = "green") +
  xlab("Sexe") +
  ylab("pourcentage") +
  geom_text(aes(label = paste0(pourcentage, "%")), vjust = 1.5, color = "black") +
  ggtitle("Répartition des enfants par sexe en %") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  )
```

### III.2. Par département

-   De façcon générale

Le graphique ci-après présente la répartion des enfants par sexe par département

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

a = as.data.frame(my_data$sexe)
b = as.data.frame(my_data$departement)
c = cbind(a, b)
colnames(c) = c("sexe", "division")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(division, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = division, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Département",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par département") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  )
```

#### III.2.1. Département de Boyo

##### III.2.1.1 De façon générale

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$departement == "Boyo", ]
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$commune)
c = cbind(a, b)
colnames(c) = c("sexe", "commune")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(commune, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = commune, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Communes",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par commune dans le département de Boyo") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  )+
  theme(plot.title = element_text(size = 10))
```

##### III.2.1.2 Par commune

-   Commune de Belo

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Belo", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Belo") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

-   Commune de Fundong

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Fundong", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Fundong") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

-   Commune de Njinikom

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Njinikom", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Njinikom") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) + 
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

#### III.2.2. Département de Donga Mantung

##### III.2.2.1 De façon générale

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$departement == "Donga mantung", ]
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$commune)
c = cbind(a, b)
colnames(c) = c("sexe", "commune")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(commune, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = commune, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Communes",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par commune dans le département de Donga Mantung") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
```

##### III.2.2.2 Par commune

-   Commune d'Ako

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Ako", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  d'Ako") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

-   Commune de Ndu

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Ndu", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Ndu") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

-   Commune de Misaje

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Misaje", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Misaje") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

#### III.2.3. Département de Momo

##### III.2.3.1 De façon générale

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$departement == "Momo", ]
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$commune)
c = cbind(a, b)
colnames(c) = c("sexe", "commune")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(commune, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = commune, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Communes",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par commune dans le département de Momo") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
```

##### III.2.3.2 Par commune

-   Commune de Babessi

```{r}
#| echo: false
#| warning: false
#| message: false

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Babessi", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Babessi") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

-   Commune de Balikumbat

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Balikumbat", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Balikumbat") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

-   Commune de Ndop

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

library(ggplot2)
library(dplyr)
library(forcats)

temp = my_data[my_data$commune == "Ndop", ]

if(nrow(temp) != 0){
a = as.data.frame(temp$sexe)
b = as.data.frame(temp$enqueteur)
c = cbind(a, b)
colnames(c) = c("sexe", "enqueteur")

freq <- c %>%
  mutate(sexe = fct_explicit_na(sexe, na_level = "Manquant")) %>%
  group_by(enqueteur, sexe) %>%
  summarise(count = n()) %>%
  mutate(pourcentage = count / sum(count) * 100)


ggplot(data = freq, aes(x = enqueteur, y = pourcentage, fill = sexe)) +
  geom_bar(stat = "identity",position = "dodge") +
  labs(x = "Enqueteur",
       y = "Pourcentage") +
  geom_text(aes(label = sprintf("%.1f%%", pourcentage)), 
            position = position_dodge(width = 0.9), 
            vjust = 1.5, size = 3) +
  ggtitle("Répartition des enfants par sexe en % par enquêteur dans la commune  de Ndop") +
  theme(
    panel.background = element_rect(fill = "ivory1"),
    plot.background = element_rect(fill = "aliceblue")
  ) +
  theme(plot.title = element_text(size = 10))
}

if(nrow(temp) == 0) {cat("Aucun questionnaire n'a été rempli dans cette commune")}
```

## III. Pyramide des ages

### III.1. Au niveau de toute la region

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"


donnees1 =  data.frame(age = my_data$age_mois, sexe = my_data$sexe)
donnees1 = donnees1[!is.na(donnees1$age), ]
x = cut(donnees1$age, 
        breaks = c(6, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 59),
        labels = c("6-10", "11-15", "16-20", "21-25", "26-30", "31-35", "36-40", "41-45", "46-50", "51-55", "55-59"),
        include.lowest = TRUE)
donnees1$categorie = x
donnees1 = to_character(donnees1)
pyramide = data.frame(table(donnees1$categorie, donnees1$sexe))
names(pyramide) = c("AgeGroup", "Gender", "Population")

pyramide$Gender = factor(pyramide$Gender, levels = c("Masculin", "Feminin"))

pyramide <- pyramide %>%
  mutate(PopPerc = case_when(Gender == "Masculin"~-round(Population/sum(Population)*100,2),
                             TRUE~round(Population/sum(Population)*100,2)),
         signal = case_when(Gender == "Masculin"~-1,
                            TRUE~1))
fonctionPY1 <- ggplot(pyramide) + 
  geom_bar(aes(x = AgeGroup, y = PopPerc, fill = Gender), stat = 'identity')+
  #geom_text(aes(x=AgeGroup, y=PopPerc+signal*.4, label = abs(PopPerc)))+
  coord_flip()+
  scale_fill_manual(name = '', values = c('blue', 'pink')) + 
  scale_y_continuous(breaks = seq(-14, 14, 2),
                     labels = function(x)paste0(abs(x),'%'))+
  labs(x='', y='Pourcentage dans la population totale',
       title = "Pyramide d'âge en mois des enfants enregistrés",
       subtitle = paste("Total des enfants enregistrés dans le region :",
                        sum(pyramide$Population ))
  )+
  cowplot::theme_cowplot()+
  theme(axis.text.x = element_text(vjust = .5),
        panel.grid.major.y = element_line(color = 'lightgray', linetype = 'dashed'),
        legend.position = 'top',
        legend.justification = 'center')

fonctionPY1
```

### III.2. Par département

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"


fonctionPY2 <- function(dep){
  
  
  base_filtree = my_data[my_data$departement == dep, ]
  donnees1 =  data.frame(age = base_filtree$age_mois, sexe = base_filtree$sexe)
  donnees1 = donnees1[!is.na(donnees1$age), ]
  x = cut(donnees1$age, 
          breaks = c(6, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 59),
          labels = c("6-10", "11-15", "16-20", "21-25", "26-30", "31-35", "36-40", "41-45", "46-50", "51-55", "55-59"),
          include.lowest = TRUE)
  donnees1$categorie = x
  donnees1 = to_character(donnees1)
  pyramide = data.frame(table(donnees1$categorie, donnees1$sexe))
  names(pyramide) = c("AgeGroup", "Gender", "Population")
  
  pyramide$Gender = factor(pyramide$Gender, levels = c("Masculin", "Feminin"))
  
  pyramide <- pyramide %>%
    mutate(PopPerc = case_when(Gender == "Masculin"~-round(Population/sum(Population)*100,2),
                               TRUE~round(Population/sum(Population)*100,2)),
           signal = case_when(Gender == "Masculin"~-1,
                              TRUE~1))
  graph <- ggplot(pyramide) + 
    geom_bar(aes(x = AgeGroup, y = PopPerc, fill = Gender), stat = 'identity')+
    #geom_text(aes(x=AgeGroup, y=PopPerc+signal*.4, label = abs(PopPerc)))+
    coord_flip()+
    scale_fill_manual(name = '', values = c('blue', 'pink')) + 
    scale_y_continuous(breaks = seq(-26, 26, 2),
                       labels = function(x)paste0(abs(x),'%'))+
    labs(x='', y='Pourcentage dans la population totale',
         title = "Pyramide d'âge en mois des enfants enregistrés",
         subtitle = paste0("Total des enfants enregistrés dans le departement ", dep, " : ",
                           sum(pyramide$Population ))
    )+
    cowplot::theme_cowplot()+
    theme(axis.text.x = element_text(vjust = .5),
          panel.grid.major.y = element_line(color = 'lightgray', linetype = 'dashed'),
          legend.position = 'top',
          legend.justification = 'center')
  
  return(graph)
}
```

#### 1. Département de Boyo

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"


fonctionPY2("Boyo")
```

#### 2. Département de Donga Mantung

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"


fonctionPY2("Donga mantung")
```

#### 3. Département de Momo

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"


fonctionPY2("Momo")
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 8
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

# library(pyramid)

textlab = c("]0,10]", "]10,20]", "]20,30]", "]30,40]", "]40,50]","]50,60]")
# for(i in unique(my_data$departement)){
# temp = my_data[my_data$departement == i, ]
# catAge <- cut(temp$age_mois, breaks = seq(0, 60, 10), labels = textlab)
# temp <- cbind(temp, catAge)
# dataPyramide <- table(temp$catAge, temp$sexe)
# 
# dataPyramide = as.data.frame(dataPyramide)
# cats <- dataPyramide[1:6,1]
# femmes <- dataPyramide[1:6, 3]
# hommes <- dataPyramide[7:12, 3]
# 
# dataP <- data.frame(hommes, femmes, cats)
# 
# pyramid(data = dataP,
#         main = paste("Pyramide des âges en mois des enfants enquêtés\n dans le département de ", i),
#         Laxis = seq(0, 3, 1),
#         Llab = "Garçons",
#         Rlab = "Fille",
#         Clab = "Ages en mois",
#         Cadj = 0.03
#         )
# }
```

### III.3 Par commune

```{r}
#| echo: false
#| warning: false
#| message: false


fonctionPY3 <- function(com){
  
  base_filtree = my_data[my_data$commune == com, ]
  donnees1 =  data.frame(age = base_filtree$age_mois, sexe = base_filtree$sexe)
  donnees1 = donnees1[!is.na(donnees1$age), ]
  x = cut(donnees1$age, 
          breaks = c(6, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 59),
          labels = c("6-10", "11-15", "16-20", "21-25", "26-30", "31-35", "36-40", "41-45", "46-50", "51-55", "55-59"),
          include.lowest = TRUE)
  donnees1$categorie = x
  donnees1 = to_character(donnees1)
  
  pyramide = data.frame(table(donnees1$categorie, donnees1$sexe))
  names(pyramide) = c("AgeGroup", "Gender", "Population")
  
  pyramide$Gender = factor(pyramide$Gender, levels = c("Masculin", "Feminin"))
  
  pyramide <- pyramide %>%
    mutate(PopPerc = case_when(Gender == "Masculin"~-round(Population/sum(Population)*100,2),
                               TRUE~round(Population/sum(Population)*100,2)),
           signal = case_when(Gender == "Masculin"~-1,
                              TRUE~1))
  graph <- ggplot(pyramide) + 
    geom_bar(aes(x = AgeGroup, y = PopPerc, fill = Gender), stat = 'identity')+
    #geom_text(aes(x=AgeGroup, y=PopPerc+signal*.4, label = abs(PopPerc)))+
    coord_flip()+
    scale_fill_manual(name = '', values = c('blue', 'pink')) + 
    scale_y_continuous(breaks = seq(-36, 36, 4),
                       labels = function(x)paste0(abs(x),'%'))+
    labs(x='', y='Pourcentage dans la population totale',
         title = "Pyramide d'âge en mois des enfants enregistrés",
         subtitle = paste0("Total des enfants enregistrés dans la commune ", com, " : ",
                           sum(pyramide$Population ))
    )+
    cowplot::theme_cowplot()+
    theme(axis.text.x = element_text(vjust = .5),
          panel.grid.major.y = element_line(color = 'lightgray', linetype = 'dashed'),
          legend.position = 'top',
          legend.justification = 'center')
  
  return(graph)
}
```


```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 8
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

#library(pyramid)

cat("1. Communes du département de Boyo", "\n")

fonctionPY3("Belo")
fonctionPY3("Fundong")
fonctionPY3("Njinikom")

# temp = my_data[my_data$departement == "Boyo", ]
# 
# for(i in unique(temp$commune)){
# temp1 = temp[temp$commune == i, ]
# catAge <- cut(temp1$age_mois, breaks = seq(0, 60, 10), labels = textlab)
# temp1 <- cbind(temp1, catAge)
# dataPyramide <- table(temp1$catAge, temp1$sexe)
# 
# dataPyramide = as.data.frame(dataPyramide)
# cats <- dataPyramide[1:6,1]
# femmes <- dataPyramide[1:6, 3]
# hommes <- dataPyramide[7:12, 3]
# 
# dataP <- data.frame(hommes, femmes, cats)
# 
# pyramid(data = dataP,
#         main = paste("Pyramide des âges en mois des enfants enquêtés\n dans la commune de ", i),
#         Laxis = seq(0, 3, 1),
#         Llab = "Garçons",
#         Rlab = "Fille",
#         Clab = "Ages en mois",
#         Cadj = 0.03
#         )
# }

```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 8
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

# library(pyramid)

cat("2. Communes du département de Donga mantung", "\n")

fonctionPY3("Ndu")
fonctionPY3("Misaje")
fonctionPY3("Ako")

# temp = my_data[my_data$departement == "Donga mantung", ]
# 
# for(i in unique(temp$commune)){
# temp1 = temp[temp$commune == i, ]
# catAge <- cut(temp1$age_mois, breaks = seq(0, 60, 10), labels = textlab)
# temp1 <- cbind(temp1, catAge)
# dataPyramide <- table(temp1$catAge, temp1$sexe)
# 
# dataPyramide = as.data.frame(dataPyramide)
# cats <- dataPyramide[1:6,1]
# femmes <- dataPyramide[1:6, 3]
# hommes <- dataPyramide[7:12, 3]
# 
# dataP <- data.frame(hommes, femmes, cats)
# 
# pyramid(data = dataP,
#         main = paste("Pyramide des âges en mois des enfants enquêtés\n dans la commune de ", i),
#         Laxis = seq(0, 3, 1),
#         Llab = "Garçons",
#         Rlab = "Fille",
#         Clab = "Ages en mois",
#         Cadj = 0.03
#         )
# }

```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 8
#| fig.height: 5
#| fig.align: "center"
#| out.width: "80%"
#| out.height: "80%"

# library(pyramid)

cat("3. Communes du département de Momo", "\n")

fonctionPY3("Ndop")
fonctionPY3("Balikumbat")
fonctionPY3("Babessi")


# temp = my_data[my_data$departement == "Momo", ]

# for(i in unique(temp$commune)){
# temp1 = temp[temp$commune == i, ]
# catAge <- cut(temp1$age_mois, breaks = seq(0, 60, 10), labels = textlab)
# temp1 <- cbind(temp1, catAge)
# dataPyramide <- table(temp1$catAge, temp1$sexe)
# 
# dataPyramide = as.data.frame(dataPyramide)
# cats <- dataPyramide[1:6,1]
# femmes <- dataPyramide[1:6, 3]
# hommes <- dataPyramide[7:12, 3]
# 
# dataP <- data.frame(hommes, femmes, cats)
# 
# pyramid(data = dataP,
#         main = paste("Pyramide des âges en mois des enfants enquêtés\n dans la commune de ", i),
#         Laxis = seq(0, 3, 1),
#         Llab = "Garçons",
#         Rlab = "Fille",
#         Clab = "Ages en mois",
#         Cadj = 0.03
#         )
# }

```

## VI. Distribution du dernier chiffre de l'âge en mois

Dans toute la suite, lorsque la fréquence d'un chiffre sera comprise entre 8 et 12, l'appréciation sera acceptable, dans le cas contraire, l'appréciation sera problématique.

### IV.1. Au niveau de toute la region

```{r}
#| echo: false
#| warning: false
#| message: false

library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")



```

### IV.2. Par département

-   Département de Boyo

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Boyo", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

-   Département de Donga mantung

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Donga mantung", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

-   Département de Momo

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Momo", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

### IV.3. Par Commune

-   Communes du département de Boyo
    -   Commune de Fundong

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Fundong", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

```         
- Commune de Belo
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Belo", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

```         
- Commune de Njinikom
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Njinikom", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

-   Communes du département de Donga mantung
    -   Commune de Ndu

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ndu", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

```         
- Commune de Misaje
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Misaje", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

```         
- Commune d'Ako
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ako", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

-   Communes du département de Momo
    -   Commune de Balikumbat

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Balikumbat", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

```         
- Commune de Ndop
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ndop", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

```         
- Commune de Babessi
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Babessi", ]
temp <- temp %>% drop_na(age_mois)
temp <- temp %>%
  mutate(last_digit = factor(age_mois %% 10, level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable age")

```

## V. Distribution du dernier chiffre de la taille

### V.1. Au niveau de toute la region

```{r}
#| echo: false
#| warning: false
#| message: false

dernier_chiffre <- function(nombre) {
  
  if (nombre == floor(nombre)) {
    
    return(nombre %% 10)
  } else {
    
    nombre_str <- as.character(nombre)
    
    # Séparer la partie entière et la partie décimale
    parties <- strsplit(nombre_str, "\\.")[[1]]
    
    # Prendre la partie décimale
    partie_decimale <- parties[2]
    
    nbre = as.numeric(partie_decimale)
    return(nbre %% 10)
    
  }
}
```

```{r}
#| echo: false
#| warning: false
#| message: false

library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))


temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des derniers chiffres de la variable taille")



```

### V.2. Par département

-   Département de Boyo

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Boyo", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

-   Département de Donga mantung

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Donga mantung", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

-   Département de Momo

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Momo", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

### V.3. Par Commune

-   Communes du département de Boyo
    -   Commune de Fundong

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Fundong", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

```         
- Commune de Belo
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Belo", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

```         
- Commune de Njinikom
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Njinikom", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

-   Communes du département de Donga mantung
    -   Commune de Ndu

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ndu", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

```         
- Commune de Misaje
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Misaje", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

```         
- Commune d'Ako
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ako", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

-   Communes du département de Momo
    -   Commune de Balikumbat

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Balikumbat", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

```         
- Commune de Ndop
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ndop", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

```         
- Commune de Babessi
```

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Babessi", ]
temp <- temp %>% drop_na(taille)
temp <- temp %>%
  mutate(last_digit = factor(sapply(taille, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable taille")

```

## VI. Distribution du dernier chiffre du poids

### VI.1. Au niveau de toute la region

```{r}
#| echo: false
#| warning: false
#| message: false


library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))


temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des derniers chiffres de la variable poids")



```

### V.2. Par département

-   Département de Boyo

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Boyo", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

-   Département de Donga mantung

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Donga mantung", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

-   Département de Momo

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$departement == "Momo", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

### V.3. Par Commune

-   Communes du département de Boyo
    -   Commune de Fundong

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Fundong", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

         
- Commune de Belo


```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Belo", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

        
- Commune de Njinikom

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Njinikom", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

-   Communes du département de Donga mantung
    -   Commune de Ndu

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ndu", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

         
- Commune de Misaje

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Misaje", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

         
- Commune d'Ako


```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ako", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

-   Communes du département de Momo
    -   Commune de Balikumbat

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Balikumbat", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

- Commune de Ndop

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Ndop", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```

- Commune de Babessi

```{r}
#| echo: false
#| warning: false
#| message: false



library(gtExtras)
library(gt)
library(dplyr)
library(tidyr)

temp = my_data[my_data$commune == "Babessi", ]
temp <- temp %>% drop_na(poids)
temp <- temp %>%
  mutate(last_digit = factor(sapply(poids, dernier_chiffre), level = c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) %>%
  group_by(last_digit) %>%
  summarise(frequency = n()) %>%
  mutate(percentage = (frequency / sum(frequency)) * 100)
  #mutate(percentage = sprintf("%.1f%%", (frequency / sum(frequency)) * 100))

temp2 = temp[, c("last_digit", "percentage")]
colnames(temp2) = c("Dernier_chiffre", "Pourcentage")
y = ifelse(temp2$Pourcentage >= 8 & temp2$Pourcentage <= 12, "Acceptable", "Problématique")
temp2 = cbind(temp2, y)
names(temp2)[3] = "Appréciation"
temp2 <- temp2 %>%
  mutate(Pourcentage = sprintf("%.1f%%", Pourcentage))

all_digits <- data.frame("Dernier_chiffre" = 0:9)
temp2 <- merge(all_digits, temp2, by = "Dernier_chiffre", all.x = TRUE)
temp2 <- temp2 %>%
  mutate(Pourcentage = ifelse(is.na(Pourcentage), "0.0%", Pourcentage),
         Appréciation = ifelse(is.na(Appréciation), "Problématique", Appréciation))

temp2 %>%
  gt() %>%
  gt_theme_espn() %>% 
  tab_header(title = "Tableau des fréquences des chiffres des unités de la variable poids")

```
